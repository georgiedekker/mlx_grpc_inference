[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mlx-knowledge-distillation"
version = "0.1.0"
description = "Adaptive Multi-Teacher Multi-level Knowledge Distillation for MLX"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Team C", email = "team-c@example.com"},
]
keywords = ["machine learning", "knowledge distillation", "mlx", "apple silicon", "multi-teacher", "model compression"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "mlx>=0.27.0",
    "mlx-lm>=0.26.0",
    "numpy>=2.0.0",
    "transformers>=4.30.0",
    "tokenizers>=0.19.0",
    "huggingface-hub>=0.20.0",
    "safetensors>=0.4.0",
    "pyyaml>=6.0",
    "tqdm>=4.65.0",
    "psutil>=5.9.0",
    "requests>=2.31.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=5.0.0",
    "black>=24.0.0",
    "isort>=5.13.0",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
]

rlhf = [
    "mlx-rlhf>=0.1.0",  # Team C's RLHF package
]

experiments = [
    "wandb>=0.16.0",
    "matplotlib>=3.8.0",
    "seaborn>=0.13.0",
    "jupyter>=1.0.0",
    "notebook>=7.0.0",
]

[project.urls]
"Homepage" = "https://github.com/team-c/mlx-knowledge-distillation"
"Bug Reports" = "https://github.com/team-c/mlx-knowledge-distillation/issues"
"Source" = "https://github.com/team-c/mlx-knowledge-distillation"
"Documentation" = "https://mlx-knowledge-distillation.readthedocs.io/"

[project.scripts]
mlx-kd = "mlx_kd.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 100
target-version = ['py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -v --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests as requiring GPU",
    "integration: marks tests as integration tests",
    "paper: marks tests that reproduce paper results"
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "mlx.*",
    "transformers.*",
    "tokenizers.*",
    "huggingface_hub.*",
]
ignore_missing_imports = true