[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "mlx-unified-training"
version = "1.0.0"
description = "Unified training platform combining Knowledge Distillation, RLHF, and Core Training for MLX"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "MLX Unified Team", email = "unified@mlx.dev"}
]
keywords = [
    "mlx",
    "machine-learning",
    "training",
    "knowledge-distillation",
    "rlhf",
    "deep-learning",
    "unified-platform"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "mlx>=0.5.0",
    "numpy>=1.24.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "pydantic>=2.0.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "pyyaml>=6.0",
    "tqdm>=4.65.0",
    "transformers>=4.30.0",
    "huggingface-hub>=0.16.0",
    "jsonlines>=3.1.0",
    "pandas>=2.0.0",
    "scipy>=1.10.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "tensorboard>=2.13.0",
    "wandb>=0.15.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.3.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
    "mypy>=1.3.0",
    "pre-commit>=3.3.0",
]

distributed = [
    "mpi4py>=3.1.0",
    "grpcio>=1.54.0",
    "grpcio-tools>=1.54.0",
]

monitoring = [
    "prometheus-client>=0.17.0",
    "opentelemetry-api>=1.18.0",
    "opentelemetry-sdk>=1.18.0",
    "opentelemetry-instrumentation-fastapi>=0.39b0",
]

[project.urls]
Homepage = "https://github.com/mlx-unified/mlx-unified-training"
Documentation = "https://mlx-unified.readthedocs.io"
Repository = "https://github.com/mlx-unified/mlx-unified-training"
Issues = "https://github.com/mlx-unified/mlx-unified-training/issues"

[project.scripts]
mlx-unified = "mlx_unified.cli:main"
mlx-unified-server = "mlx_unified.api.server:main"

[tool.setuptools]
packages = ["mlx_unified"]
package-dir = {"mlx_unified" = "src"}

[tool.setuptools.package-data]
mlx_unified = ["configs/*.yaml", "configs/*.json"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
pythonpath = ["src"]